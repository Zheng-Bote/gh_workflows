name: Generate next SemVer
description: gets latest SemVer and creates new one based on input

branding:
  icon: "point"
  color: "red"

inputs:
  Major:
    description: next SemVer is a Mayor
    type: boolean
    required: true
    default: true
  Minor:
    description: next SemVer is a Minor
    type: boolean
    required: true
    default: false
  Patch:
    description: next SemVer is a Patch
    type: boolean
    required: true
    default: false
  GH_TOKEN:
    required: true
    type: string

outputs:
  prevtag:
    description: "the old, current tag"
    value: ${{ steps.previoustag.outputs.tag }}
  vsemver:
    description: "the next v SemVer output"
    value: ${{ steps.next-semver.outputs.vsemver}}
  semver:
    description: "the next SemVer output"
    value: ${{ steps.next-semver.outputs.semver}}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: "Get Previous tag"
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      env:
        GITHUB_TOKEN: "${{ github.event.inputs.GH_TOKEN }}"

    - name: Previous tag
      shell: bash
      run: |
        echo "prev tag: ${{ steps.previoustag.outputs.tag }}"

    - name: "Get next version"
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}

    - name: Next possible tag
      shell: bash
      run: |
        echo "- MAJOR: ${{ steps.semvers.outputs.v_major }} | ${{ steps.semvers.outputs.major }}"
        echo "- MINOR: ${{ steps.semvers.outputs.v_minor }} | ${{ steps.semvers.outputs.minor }}"
        echo "- PATCH: ${{ steps.semvers.outputs.v_patch }} | ${{ steps.semvers.outputs.patch }}"

    - name: choosen output
      shell: bash
      run: echo "**Choosen Output**"

    - name: Next choosed tag Major
      id: next-semver
      shell: bash
      #if: ${{ inputs.Major == true }}
      run: |
        echo "- Major :: ${{ inputs.Major }} :: ${{ steps.semvers.outputs.v_major }} | ${{ steps.semvers.outputs.major }}"
        echo "prevtag=$(echo ${{ steps.previoustag.outputs.tag }})" >> $GITHUB_OUTPUT
        echo "vsemver=$(echo ${{ steps.semvers.outputs.v_major }})" >> $GITHUB_OUTPUT
        echo "semver=$(echo ${{ steps.semvers.outputs.major }})" >> $GITHUB_OUTPUT
